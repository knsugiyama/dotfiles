#!/bin/bash

set -eu

logging() {
  if [ "$#" -eq 0 -o "$#" -gt 1 ]; then
    echo "Usage: <msg>"
    return 1
  fi

  local text="$1"
  printf "[$(date +%H:%M:%S)] $text"
}

is_exists() {
  which "$1" >/dev/null 2>&1
  return $?
}

lower() {
  if [ $# -eq 0 ]; then
    cat <&0
  elif [ $# -eq 1 ]; then
    if [ -f "$1" -a -r "$1" ]; then
      cat "$1"
    else
      echo "$1"
    fi
  else
    return 1
  fi | tr "[:upper:]" "[:lower:]"
}

ostype() {
  # shellcheck disable=SC2119
  uname | lower
}

os_detect() {
  export PLATFORM
  case "$(ostype)" in
  *'linux'*) PLATFORM='linux' ;;
  *'darwin'*) PLATFORM='osx' ;;
  *) PLATFORM='unknown' ;;
  esac
}

install_build_tool() {
  os_detect
  # makeが存在しないと後続が続かない
  if [ "$PLATFORM" == 'linux' ]; then
    if ! is_exists "make"; then
      echo y | sudo apt update
      echo y | sudo apt upgrade
      sudo apt install -y build-essential
    fi
  fi
}

# ==============================

GITHUB_URL=https://github.com/knsugiyama/dotfiles.git
DOTPATH=~/.dotfiles
export DOTPATH

download() {
  logging "install: start download..."

  os_detect
  if [ "$PLATFORM" == 'linux' ]; then
    if ! is_exists "git"; then
      sudo apt install -y git
    fi
  fi

  git clone --recursive "$GITHUB_URL" "$DOTPATH"

  install_build_tool
}

deploy() {
  logging "install: start deploy..."
  if [ ! -d $DOTPATH ]; then
    exit 1
  fi
  cd "$DOTPATH"

  make skipfiles
  make deploy
}

initialize() {
  logging "install: start initialize..."
  local path install_shell

  os_detect
  if [ "$PLATFORM" == 'linux' ]; then
    path=${DOTPATH}/etc/init/linux
  elif [ "$PLATFORM" == 'osx']; then
    path=${DOTPATH}/etc/init/mac
  else
    exit 1
  fi

  cat ${path}/installation-order | while read install_shell; do
    if [ line != '' ]; then
      logging "shell name: ${path}/${install_shell}"
      bash "${path}/${install_shell}"
      . ~/.bash_profile
    fi
  done
}

install() {
  download &&
    deploy &&
    initialize
}

install

chsh -s $(which fish)

exec $SHELL -l

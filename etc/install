#!/bin/bash

set -eu

logging() {
  if [ "$#" -eq 0 -o "$#" -gt 1 ]; then
    echo "Usage: <msg>"
    return 1
  fi

  local text="$1"
  printf "[$(date +%H:%M:%S)] $text"
}

is_exists() {
  which "$1" >/dev/null 2>&1
  return $?
}

install_build_tool() {
  . ${DOTPATH}/etc/scripts/lib/os_detect.sh
  OS=$(os_detect)

  if ! is_exists "git"; then
    sudo apt install -y git
  fi
  # makeが存在しないと後続が続かないので
  if [ ${OS} == 'linux' ]; then
    if ! is_exists "make"; then
      echo y | sudo apt update
      echo y | sudo apt upgrade
      sudo apt install -y build-essential
    fi
  fi
}

# ==============================

GITHUB_URL=https://github.com/knsugiyama/dotfiles.git
DOTPATH=~/.dotfiles
export DOTPATH

download() {
  logging "install: start download..."
  if ! is_exists "curl" && ! is_exists "wget"; then
    logging "curl or wget required"
    exit 1
  fi

  local tarball="https://github.com/knsugiyama/dotfiles/archive/master.tar.gz"
  if is_exists "curl"; then
    curl -L "$tarball"
  elif is_exists "wget"; then
    wget -O - "$tarball"
  fi | tar xvz

  if [ ! -d dotfiles-master ]; then
    logging "dotfiles-master: not found"
    exit 1
  fi
  command mv -f dotfiles-master "$DOTPATH"

  install_build_tool
}

deploy() {
  logging "install: start deploy..."
  if [ ! -d $DOTPATH ]; then
    exit 1
  fi
  cd "$DOTPATH"

  # git管理できるようにする
  git init
  git remote add origin "$GITHUB_URL"
  git fetch origin
  git checkout -b master

  make skipFiles

  make deploy
}

initialize() {
  logging "install: start initialize..."
  local path install_shell
  if [ ${OS} == 'linux' ]; then
    path=${DOTPATH}/etc/init/linux
  elif [ ${OS} == 'osx']; then
    path=${DOTPATH}/etc/init/mac
  else
    exit 1
  fi

  cat ${path}/installation-order | while read install_shell; do
    if [ line != '' ]; then
      logging "shell name: ${path}/${install_shell}"
      chmod +x "${path}/${install_shell}"
      bash "${path}/${install_shell}"
      . ~/.bash_profile
    fi
  done
}

install() {
  download &&
    deploy &&
    initialize
}

install

exec $SHELL -l

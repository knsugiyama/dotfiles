#!/bin/sh

set -eu

logging() {
  if [ "$#" -eq 0 -o "$#" -gt 1 ]; then
    echo "Usage: <msg>"
    return 1
  fi

  local text="$1"
  printf "[$(date +%H:%M:%S)] $text"
}

is_exists() {
  which "$1" >/dev/null 2>&1
  return $?
}

lower() {
  if [ $# -eq 0 ]; then
    cat <&0
  elif [ $# -eq 1 ]; then
    if [ -f "$1" -a -r "$1" ]; then
      cat "$1"
    else
      echo "$1"
    fi
  else
    return 1
  fi | tr "[:upper:]" "[:lower:]"
}

ostype() {
  # shellcheck disable=SC2119
  uname | lower
}

os_detect() {
  export PLATFORM
  case "$(ostype)" in
  *'linux'*) PLATFORM='linux' ;;
  *'darwin'*) PLATFORM='osx' ;;
  *) PLATFORM='unknown' ;;
  esac
}

install_build_tool() {
  os_detect
  # makeが存在しないと後続が続かない
  if [ "$PLATFORM" == 'linux' ]; then
    if ! is_exists "make"; then
      echo y | sudo apt update
      echo y | sudo apt upgrade
      sudo apt install -y build-essential procps curl file git
    fi
  fi
}

install_brew() {
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  os_detect
  if [ "$PLATFORM" == 'linux' ]; then
    logging "install_brew: linux"

    test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
    test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
    test -r ~/.bash_profile && echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.bash_profile
    echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile

    source ~/.profile
  else
    exit 1
  fi

  # fish
  echo 'eval (echo (brew --prefix)/bin/brew shellenv)' >> ~/.config/fish/env.fish
}

# ==============================

GITHUB_URL=https://github.com/knsugiyama/dotfiles.git
DOTPATH=~/.dotfiles
export DOTPATH

download() {
  logging "install: start download..."

  os_detect
  if [ "$PLATFORM" == 'linux' ]; then
    if ! is_exists "git"; then
      sudo apt install -y git
    fi
  fi

  git clone --recursive "$GITHUB_URL" "$DOTPATH"

  install_build_tool
  logging "install: end download..."
}

deploy() {
  logging "install: start deploy..."
  if [ ! -d $DOTPATH ]; then
    exit 1
  fi
  cd "$DOTPATH"

  make skipfiles
  make deploy
  logging "install: end deploy..."
}

setup_brew() {
  logging "install: start setup brew..."
  install_brew
  logging "install: end setup brew..."
}

initialize() {
  logging "install: start initialize..."
  local path init_shell

  path=${DOTPATH}/etc/init

  cat ${path}/init-list | while read init_shell; do
    if [ line != '' ]; then
      logging "shell name: ${path}/${init_shell}"
      sudo sh "${path}/${init_shell}"
    fi
  done

  # default shell
  if [ "$PLATFORM" == 'linux' ]; then
    source ~/.profile
    echo `which fish` | sudo tee -a /etc/shells
  elif [ "$PLATFORM" == 'osx' ]; then
    sudo sh -c "echo '/opt/homebrew/bin/fish' >> /etc/shells"
  fi
  chsh -s $(which fish)
}

install() {
  download &&
    deploy &&
    setup_brew &&
    initialize
}

install

exec $SHELL -l
